import com.sun.xml.internal.ws.api.ha.StickyFeature;

import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.function.Predicate;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import static java.util.stream.Collectors.toList;

public class ParseIV {

    public static void main(String[] args) throws IOException {


        List<String> collectfilelines = new ArrayList<>();
        try (BufferedReader reader = new BufferedReader(new FileReader("C:\\merged\\Merged.txt"))) {
            String line = reader.readLine();

            while (line != null) {
                collectfilelines.add(line);
                line = reader.readLine();
            }
        } catch (IOException exc) {
            System.out.println("problem reading the  file" + exc);
        }


        //*TODO AD TC05
       // List<String> tc05filrecords = new ArrayList<>(collectfilelines);
        //this one workds //tc05filrecords.removeIf(s -> !s.substring(0, 2).equals("05")); //Get only 05

        Predicate<String> tc5 = p-> p.startsWith("05");
        Predicate<String> tc6 = p-> p.startsWith("06");
        Predicate<String> tc7 = p-> p.startsWith("07");
        List<String> tc05filrecords = collectfilelines.stream()
                  //.filter(p-> p.startsWith("07"))
                  .filter(tc5.or(tc6).or(tc7))
                  //.forEach(System.out::println);
                  .collect(toList());
//


        TC05 tc05 = new TC05();
        writeFile2("tc05");

        //Union records ex: 05000,0501,0502 etc
        StringBuilder record = new StringBuilder();
        int prevFieldNo = 0;
        for (String lineS : tc05filrecords) {
            int fieldNo = Integer.parseInt(lineS.substring(2, 4));

            // print last record To print first line
            if (fieldNo <= prevFieldNo) {
                if (record.length() != 0)
                    tc05.addTC05(String.valueOf(record)); // or Debug System.out.println(record);
                record.setLength(0);
                prevFieldNo = 0;
            }
            for (; prevFieldNo < fieldNo; prevFieldNo++)  // here maybe I should add it ?
                record.append(';');
            record.append(lineS.replaceAll(";|,", "0"));  // if you find a ";" char replace it with zero
        }
        if (record.length() != 0)
            tc05.addTC05(String.valueOf(record)); // or Debug System.out.println(record);
    }


    public static void writeFile2(String whichtc) throws IOException {
        String inputedtc = null;
        String headers = null;

        if (whichtc.equals("tc05")) {
            inputedtc = "C:\\merged\\exportedTC05.csv";
            headers = "Transaction Code,Transaction Code Qualifier,Transaction Component Sequence Number,Account Number,Account Number Extension,Floor Limit Indicator,CRB/Exception File Indicator,Positive Cardholder Authorization Service (PCAS) Indicator,Acquirer Reference Number,Acquirer's Business ID,Purchase Date (MMDD),Destination Amount,Destination Currency Code,Source Amount,Source Currency Code,Merchant Name,Merchant City,Merchant Country Code,Merchant Category Code,Merchant ZIP Code,Merchant State/Province Code,Requested Payment Service,Number of Payment Forms,Usage Code,Reason Code,Settlement Flag,Authorization Characteristics Indicator,Authorization Code,POS Terminal Capability,Reserved,Cardholder ID Method,Collection-Only Flag,POS Entry Mode,Central Processing Date (YDDD),Reimbursement Attribute";
        }
        ;

        if (whichtc.equals("tc06")) {
            inputedtc = "C:\\merged\\exportedTC05.csv";
        }
        ;

        if (whichtc.equals("tc07")) {
            inputedtc = "C:\\merged\\exportedTC07.csv";
        }
        ;

        FileWriter fw = new FileWriter(inputedtc);

        fw.write(headers);
        fw.close();

    }

}




